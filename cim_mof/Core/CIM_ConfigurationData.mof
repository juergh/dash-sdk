// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ConfigurationData
// ==================================================================
   [Experimental, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "Captures the configuration information of the element as an "
       "octet string (that is, a \"blob\"). The configuration data is "
       "element-specific and generalizes (for any element) the "
       "semantically similar Save/RestoreProperties methods that are "
       "currently defined as part of the LogicalDevice class. \n"
       "Various types of configurations can be instantiated for an "
       "element, such as a currently running config, a startup config, "
       "or other possible configurations. The configuration type is "
       "specified in the association of the instance to a "
       "ManagedElement using the properties of the ElementSettingData "
       "association: \n"
       "- When the configuration is currently running, then the "
       "IsCurrent Boolean of the association is true. \n"
       "- When the configuration is the initial or startup config, "
       "then the IsDefault Boolean is true. \n"
       "- If the IsCurrent and IsDefault Booleans are false, then the "
       "configuration is assumed to be a \"possible\" config "
       "(configuration workspace) for the element. \n"
       "Note: This class has an \"apply\" method only with no "
       "corresponding \"extract\". It has no extract because an "
       "application or client can query for and enumerate any existing "
       "configurations using existing CIM Operations. It is the "
       "responsibility of the client to reuse or reapply the "
       "configurations that are returned by such a request because the "
       "configuration data itself is opaque and element-specific. \n"
       "Only one \"running\" configuration can exist at any time. In "
       "addition, this configuration can be the only configuration "
       "reported by an element. However, elements can also have one "
       "\"startup\" configuration and can have multiple "
       "possible/workspace configurations. The configurations can be "
       "identical. For example, if a possible configuration is applied "
       "to an element (and therefore made the running/current "
       "configuration), then the two configs would be identical upon a "
       "subsequent query or enumerate instances request." )]
class CIM_ConfigurationData : CIM_SettingData {

      [Required, Description ( 
          "The configuration information stored as an octet string." ), 
       OctetString]
   uint8 ConfigurationInformation[];

      [Required, Description ( 
          "The datetime when the configuration information was obtained."
           )]
   datetime ConfigurationTimestamp;


      [Description ( 
          "This method processes the configuration data for an "
          "element. In this case, the data in the "
          "ConfigurationInformation property of the instance is "
          "validated for the specified element (if the ValidateOnly "
          "parameter is true), or is actually set as a "
          "configuration on the element. If the method is "
          "successful, then the appropriate ElementSettingData "
          "associations are created or modified. Note: It is not "
          "necessary for the element to be associated with the "
          "ConfigurationData instance at the time that this method "
          "is called." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..15999", "16000", 
          "16001", "16002", "16003", "16004", "16005", 
          "16006..32767", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Validate Only Request Not Supported", 
          "Configuration Data Would Not Validate", 
          "Element Does Not Support Initial/Default Configs", 
          "Element Does Not Support Possible Configs/Config Workspaces", 
          "Element Does Not Support Setting of the Running/Current Config", 
          "Element Would Not Accept Configuration", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ApplyConfiguration(
         [IN, Description ( 
             "Indicates that the request is to validate the "
             "format and syntax of the configuration data but "
             "not apply it to the referenced ManagedElement." )]
      boolean ValidateOnly, 
         [IN, Description ( 
             "The type of configuration information, indicating "
             "whether the ConfigurationInformation property "
             "holds an initial/default configuration, a "
             "running/current configuration, or a configuration "
             "for a temporary/ possible workspace. This "
             "information affects the values of the IsDefault "
             "and IsCurrent properties of the association, "
             "ElementSettingData." ), 
          ValueMap { "2", "3", "4" }, 
          Values { "Running/Current Configuration", 
             "Initial/Default Configuration", 
             "Possible Configuration/Config Workspace" }]
      uint16 TypeOfConfiguration, 
         [Required, IN, Description ( 
             "A reference to the ManagedElement whose "
             "configuration data is validated or applied. This "
             "reference is necessary because a configuration "
             "could apply to multiple elements simultaneously, "
             "but this processing request is more restrictive." )]
      CIM_ManagedElement REF ManagedElement);

};
