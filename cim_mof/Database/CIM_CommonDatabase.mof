// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Database::System" ), 
    Description ( 
       "A database is a collection of interrelated data that is "
       "treated as a unit, which is organized into one or more "
       "schemas. The CIM_CommonDatabase class defines the properties "
       "that are common across database model and vendor "
       "implementations for the database entity that is represented by "
       "the unit of interrelated data. \n"
       "Databases are manipulated through one or more database "
       "services. See the description of the CIM_DatabaseService class "
       "for more detailed information on database services." )]
class CIM_CommonDatabase : CIM_EnabledLogicalElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. \n"
          "In order to ensure uniqueness within the NameSpace, the "
          "value of InstanceID should be constructed using the "
          "following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> must include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID, or where <OrgID> is a registered ID that is "
          "assigned to the business entity by a recognized global "
          "authority. (This is similar to the <Schema Name>_<Class "
          "Name> structure of Schema class names.) In addition, to "
          "ensure uniqueness <OrgID> must not contain a colon "
          "(\':\'). When using this algorithm, the first colon to "
          "appear in InstanceID must appear between <OrgID> and "
          "<LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity must assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for the "
          "NameSpace for this instance. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "must be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Description ( 
          "The version number for the database. If the version is "
          "not relevant, the value for this property must be set to "
          "NULL." ), 
       MappingStrings { "MIB.IETF|RDBMS-MIB.rdbmsDbInfoVersion" }]
   string DatabaseVersion;

      [Description ( 
          "The date and time when the latest complete or partial "
          "backup of the database was performed. If the database "
          "has never been backed up, then this property has no "
          "meaning. \n"
          "The value of this property should be set to all zeros if "
          "the database has never been backed up." ), 
       MappingStrings { "MIB.IETF|RDBMS-MIB.rdbmsDbInfoLastBackup" }]
   datetime LastBackup;

      [Description ( 
          "The estimated amount of disk space (in units) that has "
          "been reserved for database use." ), 
       MappingStrings { "MIB.IETF|RDBMS-MIB.rdbmsDbInfoSizeAllocated" }]
   uint32 SizeAllocated;

      [Description ( 
          "The units for the SizeAllocated property and the "
          "SizeUsed property that is defined in the "
          "CIM_CommonDatabaseStatistics class. Mapping is 1 - "
          "Bytes, 2 - Kilobytes, 3 - Megabytes, 4 - Gigabytes and 5 "
          "- Terabytes." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Bytes", "Kilobyes", "Megabytes", "Gigabytes", 
          "Terabytes" }, 
       MappingStrings { "MIB.IETF|RDBMS-MIB.rdbmsDbInfoSizeUnits" }]
   uint16 SizeUnits;

      [Experimental, Description ( 
          "This array provides a place to represent characteristics "
          "of a database, which are essentially Boolean in nature. \n"
          "The presence of a particular value in this array "
          "indicates that the database has the characteristic, "
          "while absence of a particular value indicates that the "
          "database does not have the characteristic. \n"
          "A value of \"Other\" indicates that the characteristic "
          "is not in the defined range of values for "
          "DatabaseCharacteristics and must be further described in "
          "the corresponding entry of OtherDatabaseCharacteristics. "
          "A value of \"Cluster\" indicates that the CommonDatabase "
          "is part of a database cluster. A value of \"Distributed\" "
          "indicates that the CommonDatabase is distributed over "
          "multiple systems. Values in the \"DMTF Reserved\" range "
          "are reserved for future expansion of the standard and "
          "must not be used. Values in the \"Vendor Specific\" "
          "range are set aside for vendor extensions to the "
          "standard and must be accompanied by further descriptions "
          "in the corresponding entry in "
          "OtherDatabaseCharacteristics." ), 
       ValueMap { "1", "2", "3", "4..32767", "32768..65535" }, 
       Values { "Other", "Cluster", "Distributed", "DMTF Reserved", 
          "Vendor Specific" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_CommonDatabase.OtherDatabaseCharacteristics" }]
   uint16 DatabaseCharacteristics[];

      [Experimental, Description ( 
          "When the corresponding array entry in "
          "DatabaseCharacteristics[] is \"Other\", the entry in "
          "this array must contain a string that describes the "
          "database characteristic not otherwise included in the "
          "range of values. An entry in this array can be used to "
          "provide additional information about the corresponding "
          "entry in DatabaseCharacteristics regardless of the value "
          "in DatabaseCharacteristics and must be used to describe "
          "the meaning behind values in the \"Vendor Specific\" "
          "range. It is recommended that this array be used to "
          "describe new values added from the \"DMTF Reserved\" "
          "range in future versions in order to provide some level "
          "of forward functionality for prior-version clients." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_CommonDatabase.DatabaseCharacteristics" }]
   string OtherDatabaseCharacteristics[];

      [Experimental, Description ( 
          "The DataModelType property identifies the data model "
          "that the database supports." ), 
       ValueMap { "0", "3", "4", "5", "6..32767", "32768..65535" }, 
       Values { "Unknown", "Relational", "Hierarchical", "XML", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 DataModelType;


};
