// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_MPLSBuffers
// ==================================================================
   [Experimental, Version ( "2.8.1000" ), 
    UMLPackagePath ( "CIM::Network::Buffers" ), 
    Description ( 
       "MPLSBuffers represents buffer resources supporting Label "
       "Switch Routers (LSRs) and MPLS interfaces on these LSRs." )]
class CIM_MPLSBuffers : CIM_BufferPool {

      [Description ( 
          "The maximum allocation multiplier (MAM) determines the "
          "proportion of the buffer resource that is available for "
          "allocation to MPLS tunnels/traffic trunks. The value of "
          "the MAM can be chosen so that a resource can be "
          "under-allocated or over-allocated. A resource is said to "
          "be under-allocated if the aggregate demands of all "
          "traffic trunks that can be allocated to it are always "
          "less than the capacity of the resource. A resource is "
          "said to be over-allocated if the aggregate demands of "
          "all traffic trunks allocated to it can exceed the "
          "capacity of the resource." ), 
       Units ( "Percent" ), 
       MinValue ( 0 ), 
       MaxValue ( 100 ), 
       PUnit ( "percent" )]
   uint16 MaxAllocMultiplier;

      [Description ( 
          "This property describes the resource classes to which a "
          "buffer resource belongs. ResourceClasses is defined as a "
          "32-bit vector, and the classes are described in "
          "[RFC2702]. In general, a resource can be assigned to "
          "more than one resource class, since the classes are "
          "coded in the individual bits of the property. \n"
          "\n"
          "Resource classes can be used to implement a variety of "
          "policies. From a Traffic Engineering perspective, they "
          "can be used to implement policies with regard to both "
          "traffic and resource oriented performance optimization. "
          "For example, resource class attributes can specify the "
          "relative preference of sets of resources for path "
          "placement of traffic trunks; explicitly restrict the "
          "placement of traffic trunks to specific subsets of "
          "resources; etc." )]
   uint32 ResourceClasses;


};
