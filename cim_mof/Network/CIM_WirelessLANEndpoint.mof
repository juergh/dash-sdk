// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01484.000" type ="change"> Correct ValueMaps for
// ProtocolIfType</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_WirelessLANEndpoint
// ==================================================================
   [Experimental, Version ( "2.8.1000" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "A ProtocolEndpoint supporting 802.11 wireless networking." )]
class CIM_WirelessLANEndpoint : CIM_ProtocolEndpoint {

      [Override ( "Name" ), 
       Description ( "The MAC Address of the wireless endpoint." )]
   string Name;

      [Override ( "ProtocolIFType" ), 
       Description ( 
          "ProtocolIFType\'s enumeration is limited to "
          "wirelss-related and reserved values for this subclass of "
          "ProtocolEndpoint." ), 
       ValueMap { "1", "71", "225..4095", "4112", "4113", "4114", 
          "4115", "4301..32767", "32768.." }, 
       Values { "Other", "IEEE 802.11", "IANA Reserved", "802.11a", 
          "802.11b", "802.11g", "802.11h", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 ProtocolIFType = 71;

      [Description ( 
          "A 32-character identifier (the Service Set Identifier) "
          "that is inserted into the header of packets transmitted "
          "from the endpoint. This identifier helps to distinguish "
          "one Wireless LAN from another." ), 
       MaxLen ( 32 )]
   string SSID;

      [Description ( 
          "Boolean indicating whether the Wired Equivalent Privacy "
          "algorithm is enabled for communications on this "
          "endpoint. By default, this property is set to FALSE." )]
   boolean WEPEnabled = false;

      [Description ( 
          "Boolean indicating whether WEP key mixing is used. By "
          "default, this property is set to FALSE." )]
   boolean WEPKeyMixEnabled = false;


};
