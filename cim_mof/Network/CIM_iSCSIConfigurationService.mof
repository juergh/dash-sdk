// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01529.001" type ="add"> Add
// Create/delete methods to iSCSI configuration service. </change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_iSCSIConfigurationService
// ==================================================================
   [Experimental, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Network::iSCSI" ), 
    Description ( 
       "The iSCSIConfigurationService provides methods that allow a "
       "client to manipulate iSCSIProtocolEndpoints in an iSCSI Node. "
       "iSCSIProtocolController models the iSCSI Port. The instance of "
       "the service is scoped by an instance of ComputerSystem that "
       "represents that Network Entity. The capabilities of this "
       "service are defined in the companion class "
       "iSCSIConfigurationCapabilities." )]
class CIM_iSCSIConfigurationService : CIM_Service {


      [Description ( 
          "This method creates an iSCSI Port in the form of an "
          "instance of iSCSIProtocolEndpoint. As part of the "
          "creation process the iSCSIProtocolEndpoint is \'bound "
          "to\' the underlying TCP or IP ProtocolEndpoints which "
          "are specified as inputs by creating instances of the "
          "BindsTo association between the new instance and those "
          "instances. In addition, an instance of "
          "SAPAvailableForElement is created between the specified "
          "SCSIProtocolController and the new instance of "
          "iSCSIProtocolEndpoint." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..4095", "4096", 
          "4097", "4098", "4099", "4100", "4101", "4102", "4103", 
          "4104..32767", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "SCSIProtocolController Non-existent", 
          "Role Not Supported By Specified SCSIProtocolController", 
          "Identifier In Use, Not Unique", 
          "Identifier Selection Not Supported", 
          "ProtocolEndpoint Non-Existent", 
          "TCPProtocolEndpoint Not Bound To Underlying IPProtocolEndpoint", 
          "TCPProtocolEndpoint In Use By Other iSCSIProtocolEndpoint In Same Target SCSIProtocolController", 
          "ProtocolEndpoints Not From Same Endpoint Collection", 
          "Method Reserved", "Vendor Specific" }]
   uint32 CreateiSCSIProtocolEndpoint(
         [IN, Description ( 
             "The SCSIProtocolController instance representing "
             "the iSCSI Node that will contain the iSCSI Port." )]
      CIM_SCSIProtocolController REF iSCSINode, 
         [IN, Description ( 
             "For iSCSI, each iSCSIProtocolEndpoint must act as "
             "either a target or an initiator endpoint. This "
             "property indicates which role this "
             "iSCSIProtocolEndpoint implements." ), 
          ValueMap { "2", "3" }, 
          Values { "Initiator", "Target" }]
      uint16 Role, 
         [IN, Description ( 
             "If this is an Initiator Port, Identifier MUST "
             "contain the ISID, if this is a Target Port, "
             "Identifier MUST contain the Target Portal Group "
             "Tag (TGPT). Each iSCSIProtocolEndpoint (iSCSI "
             "port) associated to a common "
             "SCSIProtocolController (iSCSI node) must have a "
             "unique Identifier. This field is a string that "
             "contains 12 hexadecimal digits. If the property "
             "IdentifierSelectionSupported in class "
             "iSCSIConfigurationCapabilities is false, this "
             "parameter MUST be set to NULL." ), 
          MaxLen ( 13 ), 
          ModelCorrespondence { 
             "CIM_iSCSIConfigurationCapabilities.IdentifierSelectionSupported" }]
      string Identifier, 
         [IN, Description ( 
             "Array of References to either TCPProtocolEndpoints "
             "representing Target NetworkPortals or "
             "IPProtocolEndpoint instances representing "
             "Initiator NetworkPortals. If TCPProtocolEndpoints "
             "are supplied each MUST be in turn associated to an "
             "instance of IPProtocolEndpoint via a BindsTo "
             "association in order to provide the Target Network "
             "Portal functionality. The selected Portal "
             "endpoints MUST be from the same "
             "SystemSpecificCollection, which represents a "
             "Portal Group." )]
      CIM_ProtocolEndpoint REF NetworkPortals[], 
         [IN ( false ), OUT, Description ( 
             "A reference to the new iSCSIProtocolEndpoint that is created."
              )]
      CIM_iSCSIProtocolEndpoint REF iSCSIPort);

      [Description ( 
          "The method deletes an instance of iSCSIProtocolEndpoint "
          "and all associations in which this iSCSIProtocolEndpoint "
          "is referenced." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..4095", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Endpoint Non-Existent", "Method Reserved", 
          "Vendor Specific" }]
   uint32 DeleteiSCSIProtocolEndpoint(
         [IN, Description ( 
             "The iSCSIProtocolEndpoint to be deleted." )]
      CIM_iSCSIProtocolEndpoint REF iSCSIPort);

      [Description ( 
          "This method provides for modification of an existing "
          "iSCSIProtocolEndpoint by associating a "
          "TCPProtocolEndpoint representing an Target NetworkPortal "
          "or an IPProtocolEndpoint instance representing an "
          "Initiator NetworkPortal to the iSCSIProtocolEndpoint. "
          "The association is persisted as an instance of BindsTo. "
          "The selected Portal endpoint must be from the same "
          "SystemSpecificCollection, which represents a Portal "
          "Group, as the endpoints currently bound to the "
          "iSCSIProtocolEndpoint. This action is intended to be "
          "reversed by the use of the intrinsic method "
          "\'DeleteInstance\'." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..4095", "4096", 
          "4097", "4098", "4099", "4100..32767", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "ProtocolEndpoint Non-Existent", 
          "TCPProtocolEndpoint Not Bound To Underlying IPProtocolEndpoint", 
          "ProtocolEndpoint In Use By Other iSCSIProtocolEndpoint In Same Target SCSIProtocolController", 
          "ProtocolEndpoint Not From Same Endpoint Collection", 
          "Method Reserved", "Vendor Specific" }]
   uint32 BindiSCSIProtocolEndPoint(
         [IN, Description ( 
             "A reference to the iSCSIProtocolEndpoint." )]
      CIM_iSCSIProtocolEndpoint REF iSCSIPort, 
         [IN, Description ( 
             "The ProtocolEndpoint instance. If an iSCSI "
             "Initiator Port is being modified this will be an "
             "IPProtocolEndpoint. If an iSCSI Target Port is "
             "being modified this will be a TCPProtocolEndpoint." )]
      CIM_ProtocolEndpoint REF NetworkPortal);

      [Description ( 
          "This method creates an iSCSI Node in the form of an "
          "instance of SCSIProtocolController. As part of the "
          "creation process a SystemDevice association is created "
          "between the new SCSIProtocolController and the scoping "
          "Network Entity (CIM_ComputerSystem) hosting this "
          "service." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..4095", "4096", 
          "4097", "4098..32767", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Node Creation Not Supported", 
          "Alias In Use By Other Node", "Method Reserved", 
          "Vendor Specific" }]
   uint32 CreateiSCSINode(
         [IN, Description ( "The iSCSI Alias for the new Node." ), 
          MaxLen ( 128 ), 
          ModelCorrespondence { 
             "CIM_SCSIProtocolController.ElementName" }]
      string Alias, 
         [OUT, Description ( 
             "The SCSIProtocolController instance representing "
             "the created iSCSI Node." )]
      CIM_SCSIProtocolController REF iSCSINode);

      [Description ( 
          "This method deletes an instance of "
          "SCSIProtocolController respresenting an iSCSI Node. If "
          "Sessions are active on iSCSIProtocolEndpoints belonging "
          "to this node an error will be returned. If no Sessions "
          "are active the scoped iSCSIProtocolEndpoints will be "
          "deleted." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..4095", "4096", 
          "4097", "4098..32767", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "SCSIProtocolController Non-Existent", 
          "Sessions Active on Node Ports", "Method Reserved", 
          "Vendor Specific" }]
   uint32 DeleteiSCSINode(
         [IN, Description ( 
             "The SCSIProtocolController instance representing "
             "the iSCSI Node that will be deleted." )]
      CIM_SCSIProtocolController REF iSCSINode);

};
