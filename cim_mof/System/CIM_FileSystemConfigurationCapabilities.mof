// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FileSystemConfigurationCapabilities 
// ==================================================================
   [Experimental, Version ( "2.8.1000" ), 
    UMLPackagePath ( "CIM::System::FilesystemServices" ), 
    Description ( 
       "FileSystemConfigurationCapabilities specifies the capability "
       "of a FileSystemConfigurationService to support the specified "
       "methods." )]
class CIM_FileSystemConfigurationCapabilities : CIM_Capabilities {

      [Description ( 
          "An array of enumerated values that indicates the set of "
          "actual file system implementation types that this "
          "FileSystemConfigurationService can support in its "
          "Capabilities. For each file system type listed here, "
          "there MUST be at least one FileSystemCapabilities "
          "element." ), 
       ValueMap { "0", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "..", "0x8000.." }, 
       Values { "Unknown", "UFS", "HFS", "FAT", "FAT16", "FAT32", 
          "NTFS4", "NTFS5", "XFS", "AFS", "EXT2", "EXT3", 
          "REISERFS", "DMTF Reserved", "Vendor Defined" }, 
       Read]
   uint16 SupportedActualFileSystemTypes[];

      [Description ( 
          "An array of methods of this Service that are supported "
          "as synchronous methods." ), 
       ValueMap { "2", "3", "4", "5", "6", "..", "0x8000.." }, 
       Values { "CreateFileSystem", "DeleteFileSystem", 
          "ModifyFileSystem", "CreateGoal", 
          "GetRequiredStorageSize", "DMTF Reserved", "Vendor Defined" }, 
       Read]
   uint16 SupportedSynchronousMethods[];

      [Description ( 
          "An array of methods of this Service that are supported "
          "as asynchronous methods." ), 
       ValueMap { "2", "3", "4", "5", "6", "..", "0x8000.." }, 
       Values { "CreateFileSystem", "DeleteFileSystem", 
          "ModifyFileSystem", "CreateGoal", 
          "GetRequiredStorageSize", "DMTF Reserved", "Vendor Defined" }, 
       Read]
   uint16 SupportedAsynchronousMethods[];

      [Description ( 
          "An enumerated value that indicates the state of "
          "availability in which the Service can create the file "
          "system. The choices include \'Mounted\' and \'Unmounted\'. "
          "If \'Mounted\', the mount-point will be at a "
          "vendor-specific default LogicalFile, and a "
          "MountedElement association will be surfaced." ), 
       ValueMap { "0", "2", "3", "..", "0x8000.." }, 
       Values { "Unknown", "Mounted", "Unmounted", "DMTF Reserved", 
          "Vendor Defined" }, 
       Read]
   uint16 InitialAvailability;


};
