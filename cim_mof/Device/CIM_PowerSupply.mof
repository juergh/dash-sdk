// Copyright (c) 2007 DMTF.  All Rights Reserved.
   [Version ( "2.17.0" ), 
    UMLPackagePath ( "CIM::Device::CoolingAndPower" ), 
    Description ( 
       "Capabilities and management of the PowerSupply.The PowerSupply "
       "may have two input voltage ranges. The attributes of each "
       "input voltage (high and low voltage bounds, high and low "
       "frequency bounds, maximum input power, and maximum output "
       "power) are modeled separately. Additional attributes of the "
       "power supply including the active input voltage range and type "
       "of range switching may also be modeled." )]
class CIM_PowerSupply : CIM_PowerSource {

      [Description ( 
          "Boolean indicating that the PowerSupply is a switching "
          "(instead of linear) supply." )]
   boolean IsSwitchingSupply;

      [Description ( 
          "The low voltage of Input Voltage Range 1 for this Power "
          "Supply, in millivolts. A value of 0 denotes \'unknown\'." ), 
       Units ( "MilliVolts" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.7" }, 
       PUnit ( "volt * 10^-3" )]
   uint32 Range1InputVoltageLow;

      [Description ( 
          "The high voltage of Input Voltage Range 1 for this Power "
          "Supply, in millivolts. A value of 0 denotes \'unknown\'." ), 
       Units ( "MilliVolts" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.8" }, 
       PUnit ( "volt * 10^-3" )]
   uint32 Range1InputVoltageHigh;

      [Description ( 
          "The frequency (in hertz) at the low end of the Input "
          "Frequency Range 1 of this Power Supply. A value of 0 "
          "implies DC." ), 
       Units ( "Hertz" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.17" }, 
       PUnit ( "hertz" )]
   uint32 Range1InputFrequencyLow;

      [Description ( 
          "The frequency (in hertz) at the high end of the Input "
          "Frequency Range 1 of this Power Supply. A value of 0 "
          "implies DC." ), 
       Units ( "Hertz" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.18" }, 
       PUnit ( "hertz" )]
   uint32 Range1InputFrequencyHigh;

      [Description ( 
          "The low voltage of Input Voltage Range 2 for this Power "
          "Supply, in millivolts. A value of 0 denotes \'unknown\'." ), 
       Units ( "MilliVolts" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.11" }, 
       PUnit ( "volt * 10^-3" )]
   uint32 Range2InputVoltageLow;

      [Description ( 
          "The high voltage of Input Voltage Range 2 for this Power "
          "Supply, in millivolts. A value of 0 denotes \'unknown\'." ), 
       Units ( "MilliVolts" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.12" }, 
       PUnit ( "volt * 10^-3" )]
   uint32 Range2InputVoltageHigh;

      [Description ( 
          "The frequency (in hertz) at the low end of the Input "
          "Frequency Range 2 of this Power Supply. A value of 0 "
          "implies DC." ), 
       Units ( "Hertz" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.19" }, 
       PUnit ( "hertz" )]
   uint32 Range2InputFrequencyLow;

      [Description ( 
          "The frequency (in hertz) at the high end of the Input "
          "Frequency Range 2 of this Power Supply. A value of 0 "
          "implies DC." ), 
       Units ( "Hertz" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.20" }, 
       PUnit ( "hertz" )]
   uint32 Range2InputFrequencyHigh;

      [Description ( 
          "ActiveInputVoltage indicates which input voltage range "
          "is currently in use. Range 1, 2, or both can be "
          "specified using the values 3, 4, or 5, respectively. If "
          "the Supply is not currently drawing power, the value 6 "
          "(\"Neither\") can be specified. This information is "
          "necessary in the case of a UPS, a subclass of "
          "PowerSupply." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Other", "Unknown", "Range 1", "Range 2", "Both", 
          "Neither" }, 
       MappingStrings { "MIF.DMTF|Power Supply|004.15" }]
   uint16 ActiveInputVoltage;

      [Description ( 
          "TypeOfRangeSwitching describes the kind of input voltage "
          "range switching that is implemented in this PowerSupply. "
          "For example, autoswitching can be specified (value=4)." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Other", "Unknown", "Manual", "Autoswitch", 
          "Wide Range", "Not Applicable" }, 
       MappingStrings { "MIF.DMTF|Power Supply|004.16" }]
   uint16 TypeOfRangeSwitching;

      [Description ( 
          "Represents the total output power of the PowerSupply in "
          "milliWatts. 0 denotes \'unknown\'." ), 
       Units ( "MilliWatts" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.21" }, 
       PUnit ( "watt * 10^-3" )]
   uint32 TotalOutputPower;

      [Experimental, Description ( 
          "Indicates the maximum amount of power that may be drawn "
          "from this PowerSupply without causing a failure "
          "condition if the CIM_PowerSupply.ActiveInputVoltage has "
          "the value 2 or 3. The units of the value shall be "
          "described by the OutputPowerUnits property. A value of "
          "zero shall indicate \'unknown\'." ), 
       ModelCorrespondence { "CIM_PowerSupply.OutputPowerUnits" }]
   uint32 Range1MaxOutputPower;

      [Experimental, Description ( 
          "Indicates the maximum amount of power that may be drawn "
          "from this PowerSupply without causing a failure "
          "condition if the CIM_PowerSupply.ActiveInputVoltage has "
          "the value 4. The units of the value shall be described "
          "by the OutputPowerUnits property. A value of zero shall "
          "indicate \'unknown\'." ), 
       ModelCorrespondence { "CIM_PowerSupply.OutputPowerUnits" }]
   uint32 Range2MaxOutputPower;

      [Experimental, Override ( "OutputPowerUnits" ), 
       Description ( 
          "Indicates the programmatic units for the "
          "MaxOutputPowerRange1, MaxOutputPowerRange2, and "
          "MaxOutputPower properties." ), 
       ModelCorrespondence { "CIM_PowerSource.MaxOutputPowerRange1", 
          "CIM_PowerSource.MaxOutputPowerRange2" }, 
       ISPunit]
   string OutputPowerUnits;

      [Experimental, Description ( 
          "Indicates the maximum amount of power that this "
          "PowerSupply may draw if the "
          "CIM_PowerSupply.ActiveInputVoltage has the value 2 or 3. "
          "The units of the value shall be described by the "
          "InputPowerUnits property. A value of zero shall indicate "
          "\'unknown\'." ), 
       ModelCorrespondence { "CIM_PowerSupply.InputPowerUnits" }]
   uint32 Range1MaxInputPower;

      [Experimental, Description ( 
          "Indicates the maximum amount of power that this "
          "PowerSupply may draw without causing a failure "
          "condition. The units of the value shall be described by "
          "the InputPowerUnits property. A value of zero shall "
          "indicate \'unknown\'." ), 
       ModelCorrespondence { "CIM_PowerSupply.InputPowerUnits" }]
   uint32 Range2MaxInputPower;

      [Experimental, Description ( 
          "Indicates the programmatic units for the "
          "Range1MaxInputPower and MaxInputPowerRange2 properties." ), 
       ModelCorrespondence { "CIM_PowerSource.Range1MaxInputPower", 
          "CIM_PowerSource.Range2MaxInputPower" }, 
       ISPunit]
   string InputPowerUnits;

      [Experimental, Description ( 
          "A value of true shall indicate the required input of the "
          "PowerSupply is alternating current (AC). A value of "
          "false shall indicate the required input for the "
          "PowerSource is direct current (DC)." )]
   boolean IsACInput;

      [Experimental, Description ( 
          "NumberOfPhasesUtilized shall indicate the number of "
          "phases this power supply is configured to utilize. A "
          "value of zero shall indicate zero phases are utilized or "
          "this information is unknown." )]
   uint32 NumberOfPhasesUtilized;

      [Experimental, Description ( 
          "NominalPhaseWiring shall indicate the phases this power "
          "supply is configured to utilize. The actual phases from "
          "which the supply is drawing may vary. For example, a "
          "power supply that utilizes two phases and is wired to "
          "three phases may cycle through any combination." ), 
       ValueMap { "0", "2", "3", "4" }, 
       Values { "Unknown", "A", "B", "C" }]
   uint32 NominalPhaseWiring[];


};
