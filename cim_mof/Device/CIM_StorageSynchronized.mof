// Copyright (c) 2008 DMTF.  All rights reserved.
   [Association, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "Indicates that two Storage objects were replicated at the "
       "specified point in time. If the CopyType property is set to "
       "\'Sync\' (=3), then synchronization of the Storage objects is "
       "preserved." )]
class CIM_StorageSynchronized : CIM_Synchronized {

      [Override ( "SystemElement" ), 
       Description ( 
          "SystemElement represents the Storage that is the source "
          "of the replication." )]
   CIM_ManagedElement REF SystemElement;

      [Override ( "SyncedElement" ), 
       Description ( 
          "SyncedElement represents the Storage that is the target "
          "of the replication." )]
   CIM_ManagedElement REF SyncedElement;

      [Description ( 
          "CopyType describes the Replication Policy. Values are: \n"
          "Async: create and maintain an asynchronous copy of the "
          "source. \n"
          "Sync: create and maintain a synchronized copy of the "
          "source. \n"
          "UnSyncAssoc: create an unsynchronized copy and maintain "
          "an association to the source. \n"
          "UnSyncUnAssoc: create an unsynchronized copy with a "
          "temporary association that is deleted upon completion of "
          "the copy operation." ), 
       ValueMap { "2", "3", "4", "5", "..", "0x8000.." }, 
       Values { "Async", "Sync", "UnSyncAssoc", "UnSyncUnAssoc", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 CopyType;

      [Description ( 
          "ReplicaType provides information on how the Replica is "
          "being maintained. Values are: \n"
          "Full Copy: This indicates that a full copy of the source "
          "object is (or will be) generated . \n"
          "Before Delta: This indicates that the source object will "
          "be maintained as a delta data from the replica. \n"
          "After Delta: This indicates that the replica will be "
          "maintained as delta data from the source object. \n"
          "Log: This indicates that the replica object is being "
          "maintained as a log of changes to the source. \n"
          "Not Specified: The method of maintaining the copy is not "
          "specified." ), 
       ValueMap { "0", "2", "3", "4", "5", "..", "0x8000.." }, 
       Values { "Not Specified", "Full Copy", "Before Delta", 
          "After Delta", "Log", "DMTF Reserved", "Vendor Specific" }]
   uint16 ReplicaType;

      [Description ( 
          "SyncState describes the state of the association with "
          "respect to Replication activity. Values are: \n"
          "Initialized: The link to enable replication is "
          "established. \n"
          "and source/replica elements are associated, but the Copy "
          "engine has not started. \n"
          "PrepareInProgress: Preparation for Replication is in "
          "progress and the Copy engine has started. \n"
          "Prepared: All necessary preparation has completed. \n"
          "ResyncInProgress: Synchronization or Resynchronization "
          "is in progress. \n"
          "This may be the initial \'copy\' or subsequent changes "
          "being copied. \n"
          "Synchronized: An Async or Sync replication is currently "
          "synchronized. When this value is set, SyncMaintained "
          "will be true. \n"
          "FractureInProgress: An operation to fracture an Async or "
          "Sync replication is in progress. \n"
          "Fractured: An Async or Sync replication is fractured. \n"
          "QuiesceInProgress: A quiesce operation is in progress. \n"
          "Quiesced: The replication has been quiesced and is ready "
          "for a change. \n"
          "RestoreInProgress: An operation is in progress to copy "
          "the Synced object to the System object. \n"
          "Idle: The \'normal\' state for an UnSyncAssoc replica. \n"
          "Frozen: All blocks copied from source to an UnSyncAssoc "
          "replica and the copy engine is stopped. \n"
          "CopyInProgress: A deferred background copy operation is "
          "in progress to copy the source to the replica target for "
          "an UnSyncAssoc association. \n"
          "Broken: The relationship is non-functional due to errors "
          "in the source, the target, the path between the two or "
          "space constraints." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "..", "0x8000.." }, 
       Values { "Initialized", "PrepareInProgress", "Prepared", 
          "ResyncInProgress", "Synchronized", 
          "Fracture In Progress", "QuiesceInProgress", "Quiesced", 
          "Restore In Progresss", "Idle", "Broken", "Fractured", 
          "Frozen", "Copy In Progress", "DMTF Reserved", 
          "Vendor Specific" }]
   uint16 SyncState;

      [Experimental, Description ( 
          "CopyPriority allows the priority of background copy "
          "engine I/O to be managed relative to host I/O operations "
          "during a sequential background copy operation. \n"
          "Values are: Low: copy engine I/O lower priority than "
          "host I/O. Same: copy engine I/O has the same priority as "
          "host I/O. High: copy engine I/O has higher priority than "
          "host I/O." ), 
       ValueMap { "0", "1", "2", "3", "..", "0x8000.." }, 
       Values { "Not Managed", "Low", "Same", "High", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 CopyPriority;

      [Description ( 
          "CopyMethodology specifies what copy methodology the "
          "service uses to create and/or maintain the target "
          "element. \n"
          "Values are: \n"
          "Not Specified: The method of maintaining the copy is not "
          "specified. \n"
          "Full Copy: This indicates that a full copy of the source "
          "object is (or will be) generated . \n"
          "Incremental-Copy: Only changed data from source element "
          "is copied to target element. \n"
          "Differential-Copy: Only the new writes to source element "
          "are copied to the target element. \n"
          "Copy-On-Write: Affected data is copied on the first "
          "write to the source or to the target elements. \n"
          "Copy-On-Access: Affected data is copied on the first "
          "access to the source element. \n"
          "Delta-Update: Difference based replication where after "
          "the initial copy, only updates to source are copied to "
          "target. \n"
          "Snap-And-Clone: The service creates a snapshot of the "
          "source element first, then uses the the snapshot as the "
          "source of the copy operation to the target element." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "..", "0x8000.." }, 
       Values { "Not Specified", "Other", "Implementation decides", 
          "Full Copy", "Incremental-Copy", "Differential-Copy", 
          "Copy-On-Write", "Copy-On-Access", "Delta-Update", 
          "Snap-And-Clone", "DMTF Reserved", "Vendor Specific" }]
   uint16 CopyMethodology;


};
