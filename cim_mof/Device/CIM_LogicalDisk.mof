// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01530.000" type ="add">Correct ValueMaps</
// <change cr="CIMCoreCR00834" type ="change">Added properties
// Usage, OtherUsageDescription, and ClientSettableUsage.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00904" type="add">Correct descriptions
// use of MAY and MUST to may and shall.</change>
// ==================================================================
//  CIM_LogicalDisk
// ==================================================================
   [Version ( "2.15.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "A LogicalDisk is a presentation of a contiguous range of "
       "logical blocks that is identifiable by applications such as "
       "filesystems via the Name field. (DeviceID (key) may use the "
       "same name or some other unique text such as a UUID.) For "
       "example in a Windows environment, the Name field may contain a "
       "drive letter. In a Unix environment, it may contain the access "
       "path (for example, \'/dev/...\'); and in a NetWare "
       "environment, may contain the volume name. LogicalDisks are "
       "typically built on a DiskPartition or other LogicalDisks (for "
       "instance, those exposed by a software volume manager). "
       "However, it can be based on other StorageExtents, like "
       "CIM_Memory, in the case of a RAM disk. \n"
       "\n"
       "LogicalDisks SHOULD set the \'Exported\' value in "
       "ExtentStatus[] if they are intended for application use." )]
class CIM_LogicalDisk : CIM_StorageExtent {

      [Override ( "NameFormat" ), 
       Description ( 
          "LogicalDisk names shall use OS Device Name format." ), 
       ValueMap { "1", "12" }, 
       Values { "Other", "OS Device Name" }]
   uint16 NameFormat = 12;

      [Override ( "NameNamespace" ), 
       Description ( 
          "LogicalDisk names shall use OS Device Namespace." ), 
       ValueMap { "1", "8" }, 
       Values { "Other", "OS Device Namespace" }]
   uint16 NameNamespace = 8;

      [Experimental, Override ( "Usage" ), 
       Description ( 
          "Indicates the intended usage or any restrictions that "
          "may have been imposed on the usage of this component. "
          "For example, an element may be reserved for use by the "
          "block server. In that case the Usage of the elementis "
          "marked as \"Reserved for the ComputerSystem\". In the "
          "case of \"Other\", see OtherUsageDescription for more "
          "information. In the value map, the \"Element Component\" "
          "refers to a LogicalDisk that is acting as a "
          "StorageExtent. In this case, the element no longer "
          "appears in the list of volumes or logical disks. Use the "
          "method GetElementsBasedOnUsage to locate such volumes or "
          "logical disks." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "..", "32768..65535" }, 
       Values { "Other", "Unrestricted", 
          "Reserved by the ComputerSystem (the block server)", 
          "Reserved by Replication Services", 
          "Reserved by Migration Services", "Local Replica Source", 
          "Remote Replica Source", "Local Replica Target", 
          "Remote Replica Target", "Local Replica Source or Target", 
          "Remote Replica Source or Target", "Delta Replica Target", 
          "Element Component", "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_LogicalDisk.OtherUsageDescription" }]
   uint16 Usage;

      [Experimental, Override ( "OtherUsageDescription" ), 
       Description ( 
          "Populated when \"Usage\" has the value of \"Other\"." ), 
       ModelCorrespondence { "CIM_LogicalDisk.Usage" }]
   string OtherUsageDescription;

      [Experimental, Override ( "ClientSettableUsage" ), 
       Description ( 
          "Indicates which values from the \"Usage\" value map can "
          "be manipulated by a client using the "
          "method\"StorageConfigurationService.RequestUsageChange\"." ), 
       ModelCorrespondence { "CIM_LogicalDisk.Usage" }]
   uint16 ClientSettableUsage[];


};
