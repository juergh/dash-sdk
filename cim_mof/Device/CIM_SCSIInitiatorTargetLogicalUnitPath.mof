// Copyright (c) 2007 DMTF.  All rights reserved.
// <change cr="DMTFCR01456.002" type ="add">update State.</
// <change cr="DMTFCR01489.002" type ="new">Add LogicalUnitNumber.</
// <change cr="DMTFCR01544.003" type ="add">update LogicalUnitNumber
// MappingStrings.</
// <change cr="CIMCoreCR00820.003" type ="change">Remove Experimental
// from class.</change>
// <change cr="CIMCoreCR00876" type ="change">Correct LogicalUnit
// from string to ref.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00876" type ="change">Correct LogicalUnit
// from string to ref.</
// <change cr="CIMCoreCR00892" type ="change">Add the base class, 
// InitiatorTargetLogicalUnitPath, to the existing class 
// SCSIInitiatorTargetLogicalUnitPath and add class 
// ATAInitiatorTargetLogicalUnitPath with same base.</
// ==================================================================
//  CIM_SCSIInitiatorTargetLogicalUnitPath
// ==================================================================
   [Association, Version ( "2.15.0" ), 
    UMLPackagePath ( "CIM::Device::StorageDevices" ), 
    Description ( 
       "An association that models a host driver path to a SCSI "
       "logical unit. Each permutation of initiator and target "
       "ProtocolEndpoints and logical units is considered a separate "
       "path. This class describes end-to-end path behavior such as "
       "properties and operations commonly used in multipath "
       "management." )]
class CIM_SCSIInitiatorTargetLogicalUnitPath : CIM_InitiatorTargetLogicalUnitPath {

      [Description ( 
          "The OS Device Name for this path. Only applicable if the "
          "ExposedPathDeviceFiles property is true in the instance "
          "of SCSIMultipathConfigurationCapabilities associated "
          "with the LogicalDevice/RedundancySet this instance is a "
          "member of." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_PATH_LOGICAL_UNIT_PROPERTIES|deviceFileName" }]
   string OSDeviceName;

      [Write, Description ( 
          "A value assigned by an administrator specifying a "
          "preference to assign to a path. The drivers will "
          "actively use all available paths with the highest "
          "weight. This allows an administrator to assign a subset "
          "of available paths for load balanced access and reserve "
          "the others as backup paths. For symmetric access "
          "devices, all paths are considered \'available\'. For "
          "asymmetric access devices, all paths in active target "
          "port groups are considered available." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_PATH_LOGICAL_UNIT_PROPERTIES|weight" }]
   uint32 AdministrativeWeight;

      [Description ( 
          "AdministrativeOverride allows an administrator to select "
          "a single path, force all I/O to this path, and disables "
          "load balancing. The steady-state value is \'No override "
          "in effect\'. When an administrator sets an override for "
          "a particular path, that path\'s AdministrativeOverride "
          "is set to \'Overridding\' and all other paths to same "
          "logical unit are assigned a value of \'Overridden\'. "
          "This property is changed using the OverridePath method "
          "in SCSIPathConfigurationService." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "Overriding", "Overridden", "No override in effect" }, 
       MappingStrings { 
          "MP_API.SNIA|MP_MULTIPATH_LOGICAL_UNIT_PROPERTIES|overridePath" }, 
       ModelCorrespondence { 
          "CIM_SCSIPathConfigurationService.SetOverridePath" }]
   uint16 AdministrativeOverride;

      [Description ( 
          "The SCSI Logical Unit Number. This is the unit number "
          "with values below 16,384 used in management "
          "applications. It is not the full SCSI SAM 8-byte logical "
          "unit number structure. Using the terminology from the "
          "T10 SCSI specifications, this is the LU number with a "
          "value between 0 and 255 using the Peripheral device "
          "addressing method with Bus Identifier zero or a LU "
          "number between 0 and 16,383 using the Flat space (AKA "
          "volume set) addressing method." ), 
       MaxValue ( 16383 ), 
       MappingStrings { 
          "MP_API.SNIA|MP_MULTIPATH_LOGICAL_UNIT_PROPERTIES|overridePathMP_API.SNIA|MP_CancelOverridePath", 
          "MP_API.SNIA|MP_SetOverridePath" }]
   uint16 LogicalUnitNumber;


};
