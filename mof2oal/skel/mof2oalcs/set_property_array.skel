	/**
	 * Sets %PROPERTY_NAME%
	 */

        public %NEW% Int32 set%PROPERTY_NAME%(%PROPERTY_CS_TYPE%[] a) {
			Int32 ret = PP.OK;
			OalDllArg o = new OalDllArg();
            try {
				o = oalConvert.toOALDLLArg(a);
				ret = %CLASSNAME%_set%PROPERTY_NAME%(OalObj, ref o);
                if (ret != PP.OK) {
					Marshal.FreeHGlobal(o.buf);
					if (throwWrapperExceptions) {
						throw new wrapperException(ret);
					} else {
						return ret;
					}
                }
            } catch (Exception e) {
                Debug.WriteLine("ERROR: " + e.Message);
            }
			Marshal.FreeHGlobal(o.buf);
			return ret;	
        }

        [DllImport(%WRAPPER_DLL_NAME%,
        CallingConvention = CallingConvention.Cdecl)]
        private static extern Int32 %CLASSNAME%_set%PROPERTY_NAME%(
            IntPtr c, ref OalDllArg arg);
